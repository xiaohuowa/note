import{_ as a,o as n,c as s,e}from"./app-55752f72.js";const t={},i=e(`<h2 id="os" tabindex="-1"><a class="header-anchor" href="#os" aria-hidden="true">#</a> os</h2><h4 id="_1-os-getcwd" tabindex="-1"><a class="header-anchor" href="#_1-os-getcwd" aria-hidden="true">#</a> 1. os.getcwd()</h4><ul><li>获取当前目录位置的方法</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
path <span class="token operator">=</span> os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-os-sep" tabindex="-1"><a class="header-anchor" href="#_2-os-sep" aria-hidden="true">#</a> 2. os.sep</h4><ul><li>返回文件分隔符</li></ul><p>linux和Windows是不一样的</p><ul><li>Windows 是 \\</li><li>Linux 是 /</li></ul><h4 id="_3-os-system-command" tabindex="-1"><a class="header-anchor" href="#_3-os-system-command" aria-hidden="true">#</a> 3. os.system(command)</h4><ul><li>可以调用cmd</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">&#39;ping www.baidu.com&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-os-name" tabindex="-1"><a class="header-anchor" href="#_4-os-name" aria-hidden="true">#</a> 4. os.name</h4><ul><li>显示正在使用的系统</li></ul><ol><li>Windows是 nt</li><li>Linux是 posix</li></ol><h4 id="_5-os-getenv-name" tabindex="-1"><a class="header-anchor" href="#_5-os-getenv-name" aria-hidden="true">#</a> 5. os.getenv(name)</h4><ul><li>返回环境变量路径</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
<span class="token keyword">print</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>getenv<span class="token punctuation">(</span><span class="token string">&quot;PyCharm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># E:\\Xiamen Ligong\\Second semester\\Python\\软件\\PyCharm 2021.3.2\\bin;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-os-getcwd" tabindex="-1"><a class="header-anchor" href="#_6-os-getcwd" aria-hidden="true">#</a> 6. os.getcwd()</h4><ul><li>返回当前工作目录的绝对路径</li></ul><p><img src="https://s2.loli.net/2023/10/17/FyGkKrHQq3tDwcn.png" alt="image-20220501133737574"></p><h3 id="os-path" tabindex="-1"><a class="header-anchor" href="#os-path" aria-hidden="true">#</a> os.path</h3><h4 id="_1-os-path-abspath-path" tabindex="-1"><a class="header-anchor" href="#_1-os-path-abspath-path" aria-hidden="true">#</a> 1. os.path.abspath( path )</h4><ul><li>用于返回path的绝对路径</li></ul><p>参数必须要有，可以联动 os.getcwd() 来获取当前工作目录的绝对路径</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-os-path-join-dir-path-file-name" tabindex="-1"><a class="header-anchor" href="#_2-os-path-join-dir-path-file-name" aria-hidden="true">#</a> 2. os.path.join(dir_path, file_name )</h4><ul><li>用于拼接路径</li></ul><p>dir_path 可以有多个，用逗号隔开</p><h4 id="_3-os-path-dirname-path" tabindex="-1"><a class="header-anchor" href="#_3-os-path-dirname-path" aria-hidden="true">#</a> 3. os.path.dirname(path)</h4><ul><li>返回当前文件的目录</li></ul><p>通常用于向上返回目录</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">#返回当前文件夹的路径</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>path<span class="token punctuation">)</span>  <span class="token comment">#返回当前文件夹的上一级文件夹的路径</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-os-path-basename-path" tabindex="-1"><a class="header-anchor" href="#_4-os-path-basename-path" aria-hidden="true">#</a> 4. os.path.basename(path)</h4><ul><li>返回路径中分隔符的最后一部分（不包括分隔符）</li></ul><h2 id="pyinstaller" tabindex="-1"><a class="header-anchor" href="#pyinstaller" aria-hidden="true">#</a> pyinstaller</h2><p>script 是脚本文件</p><ul><li>-D: 将所有文件打包一个目录</li><li>-F: 将所有文件打包成一个文件</li><li>-w: 不显示控制台窗口</li><li>-i &lt;FILE.ico&gt;：将图片设置为可执行文件的封面图片</li></ul><p><img src="https://s2.loli.net/2023/10/17/qDbetQs6ARhcp3N.png" alt="image-20220513220937638"></p>`,38),p=[i];function o(l,c){return n(),s("div",null,p)}const r=a(t,[["render",o],["__file","my_python.html.vue"]]);export{r as default};
