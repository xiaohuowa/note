const l=JSON.parse('{"key":"v-0882c981","path":"/blogs/Java/Java.html","title":"IO","lang":"en-US","frontmatter":{"categories":["Java"]},"headers":[{"level":2,"title":"流的分类","slug":"流的分类","link":"#流的分类","children":[{"level":3,"title":"输入流：","slug":"输入流","link":"#输入流","children":[]},{"level":3,"title":"输出流：","slug":"输出流","link":"#输出流","children":[]},{"level":3,"title":"字节流","slug":"字节流","link":"#字节流","children":[]},{"level":3,"title":"字符流","slug":"字符流","link":"#字符流","children":[]}]},{"level":2,"title":"java.io.*","slug":"java-io","link":"#java-io","children":[]},{"level":2,"title":"需要掌握的16个流","slug":"需要掌握的16个流","link":"#需要掌握的16个流","children":[{"level":3,"title":"🔴 java.io.FileInputStream","slug":"🔴-java-io-fileinputstream","link":"#🔴-java-io-fileinputstream","children":[]},{"level":3,"title":"🔴 java.io.FileOutputStream","slug":"🔴-java-io-fileoutputstream","link":"#🔴-java-io-fileoutputstream","children":[]},{"level":3,"title":"java.io.BufferedReader","slug":"java-io-bufferedreader","link":"#java-io-bufferedreader","children":[]},{"level":3,"title":"转换流：","slug":"转换流","link":"#转换流","children":[]},{"level":3,"title":"数据流专属","slug":"数据流专属","link":"#数据流专属","children":[]},{"level":3,"title":"🔴 标准输出流","slug":"🔴-标准输出流","link":"#🔴-标准输出流","children":[]},{"level":3,"title":"File","slug":"file","link":"#file","children":[]},{"level":3,"title":"🔴 对象专属流：","slug":"🔴-对象专属流","link":"#🔴-对象专属流","children":[]},{"level":3,"title":"IO和Properties","slug":"io和properties","link":"#io和properties","children":[]}]},{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"Java实现多线程的两种方式","slug":"java实现多线程的两种方式","link":"#java实现多线程的两种方式","children":[{"level":3,"title":"一、编写类继承Thread","slug":"一、编写类继承thread","link":"#一、编写类继承thread","children":[]},{"level":3,"title":"二、编写类实现Runnable接口（常用）","slug":"二、编写类实现runnable接口-常用","link":"#二、编写类实现runnable接口-常用","children":[]}]},{"level":2,"title":"线程的生命周期","slug":"线程的生命周期","link":"#线程的生命周期","children":[]},{"level":2,"title":"获取当前线程对象","slug":"获取当前线程对象","link":"#获取当前线程对象","children":[{"level":3,"title":"一、如何获取当前线程对象","slug":"一、如何获取当前线程对象","link":"#一、如何获取当前线程对象","children":[]},{"level":3,"title":"二、获取线程对象名字","slug":"二、获取线程对象名字","link":"#二、获取线程对象名字","children":[]}]},{"level":2,"title":"sleep","slug":"sleep","link":"#sleep","children":[{"level":3,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":3,"title":"==面试题==","slug":"面试题","link":"#面试题","children":[]},{"level":3,"title":"叫醒一个睡眠的线程","slug":"叫醒一个睡眠的线程","link":"#叫醒一个睡眠的线程","children":[]}]},{"level":2,"title":"终止线程","slug":"终止线程","link":"#终止线程","children":[{"level":3,"title":"强制终止（不推荐用，过时）","slug":"强制终止-不推荐用-过时","link":"#强制终止-不推荐用-过时","children":[]},{"level":3,"title":"合理终止线程","slug":"合理终止线程","link":"#合理终止线程","children":[]}]},{"level":2,"title":"线程调度","slug":"线程调度","link":"#线程调度","children":[{"level":3,"title":"常见的线程调度模型","slug":"常见的线程调度模型","link":"#常见的线程调度模型","children":[]},{"level":3,"title":"Java中关于线程调度的方法","slug":"java中关于线程调度的方法","link":"#java中关于线程调度的方法","children":[]}]},{"level":2,"title":"⭐⭐ 多线程重点：线程安全","slug":"多线程重点-线程安全","link":"#多线程重点-线程安全","children":[{"level":3,"title":"一、什么情况下多线程并发会有安全问题？","slug":"一、什么情况下多线程并发会有安全问题","link":"#一、什么情况下多线程并发会有安全问题","children":[]},{"level":3,"title":"二、线程同步机制","slug":"二、线程同步机制","link":"#二、线程同步机制","children":[]},{"level":3,"title":"三、同步异步概念","slug":"三、同步异步概念","link":"#三、同步异步概念","children":[]},{"level":3,"title":"四、⭐解决线程安全","slug":"四、解决线程安全","link":"#四、解决线程安全","children":[]},{"level":3,"title":"五、⭐实例变量、局部变量、静态变量对线程同步的影响","slug":"五、实例变量、局部变量、静态变量对线程同步的影响","link":"#五、实例变量、局部变量、静态变量对线程同步的影响","children":[]},{"level":3,"title":"六、synchronized有三种写法","slug":"六、synchronized有三种写法","link":"#六、synchronized有三种写法","children":[]},{"level":3,"title":"==面试题==","slug":"面试题-1","link":"#面试题-1","children":[]},{"level":3,"title":"七、死锁","slug":"七、死锁","link":"#七、死锁","children":[]},{"level":3,"title":"八、开发中应该怎么解决线程安全问题","slug":"八、开发中应该怎么解决线程安全问题","link":"#八、开发中应该怎么解决线程安全问题","children":[]},{"level":3,"title":"九、其他知识点","slug":"九、其他知识点","link":"#九、其他知识点","children":[]}]},{"level":2,"title":"一、作用","slug":"一、作用","link":"#一、作用","children":[]},{"level":2,"title":"二、反射在java.lang.reflect.*;包下","slug":"二、反射在java-lang-reflect-包下","link":"#二、反射在java-lang-reflect-包下","children":[]},{"level":2,"title":"三、反射机制相关的重要的类","slug":"三、反射机制相关的重要的类","link":"#三、反射机制相关的重要的类","children":[]},{"level":2,"title":"四、获取java.lang.Class对象的三种方式","slug":"四、获取java-lang-class对象的三种方式","link":"#四、获取java-lang-class对象的三种方式","children":[]},{"level":2,"title":"五、用反射机制（Class）实例化对象的优点","slug":"五、用反射机制-class-实例化对象的优点","link":"#五、用反射机制-class-实例化对象的优点","children":[]},{"level":2,"title":"六、Class.forName()","slug":"六、class-forname","link":"#六、class-forname","children":[]},{"level":2,"title":"七、⭐⭐获取Field（属性）","slug":"七、获取field-属性","link":"#七、获取field-属性","children":[{"level":3,"title":"通过获取field来拼接出类中的属性","slug":"通过获取field来拼接出类中的属性","link":"#通过获取field来拼接出类中的属性","children":[]},{"level":3,"title":"⭐⭐利用反射获取和设置属性值","slug":"利用反射获取和设置属性值","link":"#利用反射获取和设置属性值","children":[]}]},{"level":2,"title":"八、⭐⭐⭐获取Method","slug":"八、获取method","link":"#八、获取method","children":[{"level":3,"title":"利用反射获取方法签名内容","slug":"利用反射获取方法签名内容","link":"#利用反射获取方法签名内容","children":[]},{"level":3,"title":"反编译Method","slug":"反编译method","link":"#反编译method","children":[]},{"level":3,"title":"⭐⭐⭐通过反射机制调用方法","slug":"通过反射机制调用方法","link":"#通过反射机制调用方法","children":[]}]},{"level":2,"title":"九、⭐获取构造方法Constructor","slug":"九、获取构造方法constructor","link":"#九、获取构造方法constructor","children":[{"level":3,"title":"获取构造方法","slug":"获取构造方法","link":"#获取构造方法","children":[]},{"level":3,"title":"⭐通过反射机制创建对象","slug":"通过反射机制创建对象","link":"#通过反射机制创建对象","children":[]}]},{"level":2,"title":"十、⭐⭐获取实现的接口和父类","slug":"十、获取实现的接口和父类","link":"#十、获取实现的接口和父类","children":[]},{"level":2,"title":"十一、反射优化","slug":"十一、反射优化","link":"#十一、反射优化","children":[]},{"level":2,"title":"概述","slug":"概述-1","link":"#概述-1","children":[{"level":3,"title":"定义注解：","slug":"定义注解","link":"#定义注解","children":[]},{"level":3,"title":"使用注解：","slug":"使用注解","link":"#使用注解","children":[]},{"level":3,"title":"元注解概念","slug":"元注解概念","link":"#元注解概念","children":[]}]},{"level":2,"title":"JDK自带注解","slug":"jdk自带注解","link":"#jdk自带注解","children":[{"level":3,"title":"java.lang包下的注释类型","slug":"java-lang包下的注释类型","link":"#java-lang包下的注释类型","children":[]},{"level":3,"title":"关于Target注解","slug":"关于target注解","link":"#关于target注解","children":[]},{"level":3,"title":"关于Retention注解","slug":"关于retention注解","link":"#关于retention注解","children":[]}]},{"level":2,"title":"注解的属性","slug":"注解的属性","link":"#注解的属性","children":[{"level":3,"title":"属性类型可以是哪些","slug":"属性类型可以是哪些","link":"#属性类型可以是哪些","children":[]}]},{"level":2,"title":"反射注解","slug":"反射注解","link":"#反射注解","children":[]},{"level":2,"title":"注解作用","slug":"注解作用","link":"#注解作用","children":[]},{"level":2,"title":"文件相对路径","slug":"文件相对路径","link":"#文件相对路径","children":[]},{"level":2,"title":"获取文件的绝对路径","slug":"获取文件的绝对路径","link":"#获取文件的绝对路径","children":[]},{"level":2,"title":"资源绑定器","slug":"资源绑定器","link":"#资源绑定器","children":[]},{"level":2,"title":"类加载器","slug":"类加载器","link":"#类加载器","children":[{"level":3,"title":"什么是类加载器","slug":"什么是类加载器","link":"#什么是类加载器","children":[]},{"level":3,"title":"JDK中自带了3个类加载器","slug":"jdk中自带了3个类加载器","link":"#jdk中自带了3个类加载器","children":[]},{"level":3,"title":"类加载器加载过程","slug":"类加载器加载过程","link":"#类加载器加载过程","children":[]},{"level":3,"title":"双亲委派机制","slug":"双亲委派机制","link":"#双亲委派机制","children":[]}]},{"level":2,"title":"异常","slug":"异常","link":"#异常","children":[]},{"level":2,"title":"可变长度参数","slug":"可变长度参数","link":"#可变长度参数","children":[]}],"git":{"createdTime":1699003101000,"updatedTime":1699003101000,"contributors":[{"name":"lh","email":"1178844902@qq.com","commits":1}]},"filePathRelative":"blogs/Java/Java.md"}');export{l as data};
