import{_ as p,r as i,o as l,c,a,b as s,d as e,w as t,e as r}from"./app-55752f72.js";const d={},o=a("h1",{id:"css-目录",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#css-目录","aria-hidden":"true"},"#"),s(" css 目录")],-1),u={id:"_1-css基础、字体、选择器、文本、背景图、显示方式、引入",tabindex:"-1"},h=a("a",{class:"header-anchor",href:"#_1-css基础、字体、选择器、文本、背景图、显示方式、引入","aria-hidden":"true"},"#",-1),v={id:"_2-特性-盒子模型",tabindex:"-1"},b=a("a",{class:"header-anchor",href:"#_2-特性-盒子模型","aria-hidden":"true"},"#",-1),m={id:"_3-其他样式、浮动、布局",tabindex:"-1"},g=a("a",{class:"header-anchor",href:"#_3-其他样式、浮动、布局","aria-hidden":"true"},"#",-1),k={id:"_4-书写顺序",tabindex:"-1"},_=a("a",{class:"header-anchor",href:"#_4-书写顺序","aria-hidden":"true"},"#",-1),f=r(`<h1 id="css第03天" tabindex="-1"><a class="header-anchor" href="#css第03天" aria-hidden="true">#</a> css第03天</h1><h2 id="一、其他样式" tabindex="-1"><a class="header-anchor" href="#一、其他样式" aria-hidden="true">#</a> 一、其他样式</h2><h3 id="_1、圆角边框" tabindex="-1"><a class="header-anchor" href="#_1、圆角边框" aria-hidden="true">#</a> 1、圆角边框</h3><p>在 CSS3 中，新增了圆角边框样式，这样我们的盒子就可以变圆角了。</p><p>border-radius 属性用于设置元素的外边框圆角。</p><p>语法：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token property">border-radius</span><span class="token punctuation">:</span>length<span class="token punctuation">;</span>    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>参数值可以为数值或百分比的形式</li><li>如果是正方形，想要设置为一个圆，把数值修改为高度或者宽度的一半即可，或者直接写为 50%</li><li>该属性是一个简写属性，可以跟四个值，分别代表左上角、右上角、右下角、左下角</li><li>分开写：border-top-left-radius、border-top-right-radius、border-bottom-right-radius 和border-bottom-left-radius</li><li>兼容性 ie9+ 浏览器支持, 但是不会影响页面布局,可以放心使用</li></ul><h3 id="_2、盒子阴影" tabindex="-1"><a class="header-anchor" href="#_2、盒子阴影" aria-hidden="true">#</a> 2、盒子阴影</h3><p>CSS3 中新增了盒子阴影，我们可以使用 box-shadow 属性为盒子添加阴影。 语法：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token property">box-shadow</span><span class="token punctuation">:</span> h-shadow v-shadow blur spread color inset<span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://s2.loli.net/2023/10/17/Mi19ZJxwdtleRcD.png" alt="1571541874805"></p><h3 id="_3、文字阴影" tabindex="-1"><a class="header-anchor" href="#_3、文字阴影" aria-hidden="true">#</a> 3、文字阴影</h3><p>在 CSS3 中，我们可以使用 text-shadow 属性将阴影应用于文本。 语法：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token property">text-shadow</span><span class="token punctuation">:</span> h-shadow v-shadow blur color<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://s2.loli.net/2023/10/17/zaHuU4E8NhL3gYs.png" alt="1571541954222"></p><h2 id="二、浮动" tabindex="-1"><a class="header-anchor" href="#二、浮动" aria-hidden="true">#</a> 二、浮动</h2><h3 id="_1、传统网页布局的三种方式" tabindex="-1"><a class="header-anchor" href="#_1、传统网页布局的三种方式" aria-hidden="true">#</a> 1、传统网页布局的三种方式</h3><p>​ CSS 提供了三种传统布局方式(简单说,就是盒子如何进行排列顺序)：</p><ul><li><p>普通流（标准流）</p></li><li><p>浮动</p></li><li><p>定位</p><p>这三种布局方式都是用来摆放盒子的，盒子摆放到合适位置，布局自然就完成了。</p></li></ul><p>注意：实际开发中，一个页面基本都包含了这三种布局方式（后面移动端学习新的布局方式） 。</p><h3 id="_2、标准流-普通流-文档流" tabindex="-1"><a class="header-anchor" href="#_2、标准流-普通流-文档流" aria-hidden="true">#</a> 2、标准流（普通流/文档流）</h3><p>所谓的标准流: 就是标签按照规定好默认方式排列</p><ol><li>块级元素会独占一行，从上向下顺序排列。常用元素：div、hr、p、h1~h6、ul、ol、dl、form、table</li><li>行内元素会按照顺序，从左到右顺序排列，碰到父元素边缘则自动换行。常用元素：span、a、i、em 等</li></ol><p>以上都是标准流布局，我们前面学习的就是标准流，标准流是最基本的布局方式。</p><h3 id="_3、为什么需要浮动" tabindex="-1"><a class="header-anchor" href="#_3、为什么需要浮动" aria-hidden="true">#</a> 3、为什么需要浮动？</h3><p>​ 总结： 有很多的布局效果，标准流没有办法完成，此时就可以利用浮动完成布局。 因为浮动可以改变元素标签默认的排列方式.</p><p>​ 浮动最典型的应用：可以让多个块级元素一行内排列显示。</p><p>​ 网页布局第一准则：<strong>多个块级元素纵向排列找标准流，多个块级元素横向排列找浮动</strong>。</p><h3 id="_4、什么是浮动" tabindex="-1"><a class="header-anchor" href="#_4、什么是浮动" aria-hidden="true">#</a> 4、什么是浮动？</h3><p>​ float 属性用于创建浮动框，将其移动到一边，直到左边缘或右边缘触及包含块或另一个浮动框的边缘。</p><p>语法：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token selector">选择器</span> <span class="token punctuation">{</span> <span class="token property">float</span><span class="token punctuation">:</span> 属性值<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://s2.loli.net/2023/10/17/gHbJ3TsXy5oeNQa.png" alt="1571543209934"></p><h3 id="_5、🎈浮动特性" tabindex="-1"><a class="header-anchor" href="#_5、🎈浮动特性" aria-hidden="true">#</a> 5、🎈浮动特性</h3><p>加了浮动之后的元素,会具有很多特性,需要我们掌握的.</p><p>1、浮动元素会脱离标准流(脱标：浮动的盒子不再保留原先的位置)</p><p><img src="https://s2.loli.net/2023/10/17/aO6bntMKpH7ycTR.png" alt="1571544664994"></p><p>2、浮动的元素会一行内显示并且元素顶部对齐</p><p><img src="https://s2.loli.net/2023/10/17/FxOuk2Xc8rL3hPA.png" alt="1571544725757"></p><p>注意：</p><p>​ 浮动的元素是互相贴靠在一起的（不会有缝隙），如果父级宽度装不下这些浮动的盒子，多出的盒子会另起一行对齐。</p><h4 id="🎈浮动的元素会具有行内块元素的特性" tabindex="-1"><a class="header-anchor" href="#🎈浮动的元素会具有行内块元素的特性" aria-hidden="true">#</a> 🎈<strong>浮动的元素会具有行内块元素的特性</strong></h4><p>​ 行内元素加浮动就有行内块元素的特性</p><p>​ 浮动元素的大小根据内容来决定</p><p>​ 浮动的盒子中间是没有缝隙的</p><h3 id="_6、浮动元素经常和标准流父级搭配使用" tabindex="-1"><a class="header-anchor" href="#_6、浮动元素经常和标准流父级搭配使用" aria-hidden="true">#</a> 6、浮动元素经常和标准流父级搭配使用</h3><p>为了约束浮动元素位置, 我们网页布局一般采取的策略是:</p><p>​ 先用标准流父元素排列上下位置, 之后内部子元素采取浮动排列左右位置. 符合网页布局第一准侧</p><p><img src="https://s2.loli.net/2023/10/17/2qgkdybHJLZ3VGc.png" alt="1571544991989"></p><h2 id="三、常见网页布局" tabindex="-1"><a class="header-anchor" href="#三、常见网页布局" aria-hidden="true">#</a> 三、常见网页布局</h2><h3 id="浮动布局注意点" tabindex="-1"><a class="header-anchor" href="#浮动布局注意点" aria-hidden="true">#</a> 浮动布局注意点</h3><p>1、浮动和标准流的父盒子搭配。</p><p>先用标准流的父元素排列上下位置, 之后内部子元素采取浮动排列左右位置</p><p>2、一个元素浮动了，理论上其余的兄弟元素也要浮动。</p><p>一个盒子里面有多个子盒子，如果其中一个盒子浮动了，其他兄弟也应该浮动，以防止引起问题。</p><p><strong>浮动的盒子只会影响浮动盒子后面的标准流,不会影响前面的标准流.</strong></p><h2 id="四、清除浮动" tabindex="-1"><a class="header-anchor" href="#四、清除浮动" aria-hidden="true">#</a> 四、清除浮动</h2><h3 id="_1、为什么需要清除浮动" tabindex="-1"><a class="header-anchor" href="#_1、为什么需要清除浮动" aria-hidden="true">#</a> 1、为什么需要清除浮动？</h3><p>​ 由于父级盒子很多情况下，不方便给高度，但是子盒子浮动又不占有位置，最后父级盒子高度为 0 时，就会影响下面的标准流盒子。</p><p><img src="https://s2.loli.net/2023/10/17/Ms63aKdziDBPej5.png" alt="1571555883628"></p><h3 id="_2、清除浮动本质" tabindex="-1"><a class="header-anchor" href="#_2、清除浮动本质" aria-hidden="true">#</a> 2、清除浮动本质</h3><p><strong>清除浮动的本质是清除浮动元素造成的影响：浮动的子标签无法撑开父盒子的高度</strong></p><p>注意：</p><ul><li>如果父盒子本身有高度，则不需要清除浮动</li><li>清除浮动之后，父级就会根据浮动的子盒子自动检测高度。</li><li>父级有了高度，就不会影响下面的标准流了</li></ul><h3 id="_3、清除浮动样式" tabindex="-1"><a class="header-anchor" href="#_3、清除浮动样式" aria-hidden="true">#</a> 3、清除浮动样式</h3><p>语法：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token selector">选择器</span><span class="token punctuation">{</span><span class="token property">clear</span><span class="token punctuation">:</span>属性值<span class="token punctuation">;</span><span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://s2.loli.net/2023/10/17/cCAkPRax6Brp2uS.png" alt="1571555980419"></p><p>我们实际工作中， 几乎只用 clear: both;</p><p>清除浮动的策略是: 闭合浮动.</p><h3 id="_4、清除浮动的多种方式" tabindex="-1"><a class="header-anchor" href="#_4、清除浮动的多种方式" aria-hidden="true">#</a> 4、清除浮动的多种方式</h3><h4 id="_4-1、额外标签法" tabindex="-1"><a class="header-anchor" href="#_4-1、额外标签法" aria-hidden="true">#</a> 4.1、额外标签法</h4><p>额外标签法也称为隔墙法，是 W3C 推荐的做法。</p><p>使用方式：</p><p>​ 额外标签法会在浮动元素末尾添加一个空的标签。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>例如 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">clear</span><span class="token punctuation">:</span>both</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>，或者其他标签（如<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>等）。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​ 优点： 通俗易懂，书写方便</p><p>​ 缺点： 添加许多无意义的标签，结构化较差</p><p>​ 注意： 要求这个新的空标签必须是块级元素。</p><p>总结:</p><p>​ 1、清除浮动本质是?</p><p>​ 清除浮动的本质是清除浮动元素脱离标准流造成的影响</p><p>​ 2、清除浮动策略是?</p><p>​ 闭合浮动. 只让浮动在父盒子内部影响,不影响父盒子外面的其他盒子.</p><p>​ 3、额外标签法?</p><p>​ 隔墙法, 就是在最后一个浮动的子元素后面添</p><p>​ 4、加一个额外标签, 添加 清除浮动样式.</p><p>​ 实际工作可能会遇到,但是不常用</p><h4 id="_4-2、父级添加-overflow-属性" tabindex="-1"><a class="header-anchor" href="#_4-2、父级添加-overflow-属性" aria-hidden="true">#</a> 4.2、父级添加 overflow 属性</h4><p>可以给父级添加 overflow 属性，将其属性值设置为 hidden、 auto 或 scroll 。</p><p>例如：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">overflow</span><span class="token punctuation">:</span>hidden | auto | scroll<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>优点：代码简洁</p><p>缺点：无法显示溢出的部分</p><p>注意：是给父元素添加代码</p><h4 id="_4-3、父级添加after伪元素" tabindex="-1"><a class="header-anchor" href="#_4-3、父级添加after伪元素" aria-hidden="true">#</a> 4.3、父级添加after伪元素</h4><p>:after 方式是额外标签法的升级版。给父元素添加：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token selector">.clearfix:after</span> <span class="token punctuation">{</span>  
   <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span> 
   <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span> 
   <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> 
   <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span> 
   <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  
 <span class="token punctuation">}</span> 
 <span class="token selector">.clearfix</span> <span class="token punctuation">{</span>  <span class="token comment">/* IE6、7 专有 */</span> 
   *<span class="token property">zoom</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>优点：没有增加标签，结构更简单</p><p>缺点：照顾低版本浏览器</p><p>代表网站： 百度、淘宝网、网易等</p><h4 id="_4-4、父级添加双伪元素" tabindex="-1"><a class="header-anchor" href="#_4-4、父级添加双伪元素" aria-hidden="true">#</a> 4.4、父级添加双伪元素</h4><p>给父元素添加</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token selector">.clearfix:before,.clearfix:after</span> <span class="token punctuation">{</span>
   <span class="token property">content</span><span class="token punctuation">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
   <span class="token property">display</span><span class="token punctuation">:</span>table<span class="token punctuation">;</span> 
 <span class="token punctuation">}</span>
 <span class="token selector">.clearfix:after</span> <span class="token punctuation">{</span>
   <span class="token property">clear</span><span class="token punctuation">:</span>both<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token selector">.clearfix</span> <span class="token punctuation">{</span>
    *<span class="token property">zoom</span><span class="token punctuation">:</span>1<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>优点：代码更简洁</p><p>缺点：照顾低版本浏览器</p><p>代表网站：小米、腾讯等</p><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h3><p><strong>为什么需要清除浮动？</strong></p><ol><li>父级没高度。</li><li>子盒子浮动了。</li><li>影响下面布局了，我们就应该清除浮动了。</li></ol><p><img src="https://s2.loli.net/2023/10/17/Wg97DXv6LajR1k8.png" alt="1571556500074"></p><h2 id="五、ps-切图" tabindex="-1"><a class="header-anchor" href="#五、ps-切图" aria-hidden="true">#</a> 五、PS 切图</h2><h3 id="_1、图层切图" tabindex="-1"><a class="header-anchor" href="#_1、图层切图" aria-hidden="true">#</a> 1、图层切图</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>最简单的切图方式：右击图层 → 导出 → 切片。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2、切片切图" tabindex="-1"><a class="header-anchor" href="#_2、切片切图" aria-hidden="true">#</a> 2、切片切图</h3><p>2.1、利用切片选中图片</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> 利用切片工具手动划出
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2.2、导出选中的图片</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>文件菜单 → 存储为 web 设备所用格式 → 选择我们要的图片格式 → 存储 。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3、ps插件切图" tabindex="-1"><a class="header-anchor" href="#_3、ps插件切图" aria-hidden="true">#</a> 3、PS插件切图</h3><p>​ Cutterman 是一款运行在 Photoshop 中的插件，能够自动将你需要的图层进行输出，以替代传统的手工 &quot;导出 web 所用格式&quot; 以及使用切片工具进行挨个切图的繁琐流程。</p><p>官网：http://www.cutterman.cn/zh/cutterman</p><p>注意：Cutterman 插件要求你的 PS 必须是完整版，不能是绿色版，所以大家需要安装完整版本。</p><p><img src="https://s2.loli.net/2023/10/17/LymkwiolIZ7hCRe.png" alt="image-20220625151453357"></p>`,125);function x(E,A){const n=i("RouterLink");return l(),c("div",null,[a("blockquote",null,[o,a("blockquote",null,[a("h2",u,[h,s(" 1. "),e(n,{to:"/blogs/%E5%89%8D%E7%AB%AF/H5C3/h5c3-%E6%88%91%E7%9A%84%E7%AC%94%E8%AE%B0/css-pink.html"},{default:t(()=>[s("css基础、字体、选择器、文本、背景图、显示方式、引入")]),_:1})]),a("h2",v,[b,s(" 2. "),e(n,{to:"/blogs/%E5%89%8D%E7%AB%AF/H5C3/h5c3-%E6%88%91%E7%9A%84%E7%AC%94%E8%AE%B0/css-%E7%89%B9%E6%80%A7%EF%BC%8C%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B.html"},{default:t(()=>[s("特性，盒子模型")]),_:1})]),a("h2",m,[g,s(" 3."),e(n,{to:"/blogs/%E5%89%8D%E7%AB%AF/H5C3/h5c3-%E6%88%91%E7%9A%84%E7%AC%94%E8%AE%B0/css03-%E5%85%B6%E4%BB%96%E6%A0%B7%E5%BC%8F.html"},{default:t(()=>[s("其他样式、浮动、布局")]),_:1})]),a("h2",k,[_,s(" 4."),e(n,{to:"/blogs/%E5%89%8D%E7%AB%AF/H5C3/h5c3-%E6%88%91%E7%9A%84%E7%AC%94%E8%AE%B0/css04-%E5%88%87%E7%89%87%E3%80%81%E4%B9%A6%E5%86%99%E9%A1%BA%E5%BA%8F.html"},{default:t(()=>[s("书写顺序")]),_:1})])])]),f])}const B=p(d,[["render",x],["__file","css03-qitayangshi.html.vue"]]);export{B as default};
