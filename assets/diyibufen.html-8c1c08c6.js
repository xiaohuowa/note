const l=JSON.parse('{"key":"v-81b7ede4","path":"/blogs/SpringBoot/SpringBootyuanli/diyibufen.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"01、基础入门-SpringBoot2课程介绍","slug":"_01、基础入门-springboot2课程介绍","link":"#_01、基础入门-springboot2课程介绍","children":[]},{"level":2,"title":"02、基础入门-Spring生态圈","slug":"_02、基础入门-spring生态圈","link":"#_02、基础入门-spring生态圈","children":[{"level":3,"title":"Spring能做什么","slug":"spring能做什么","link":"#spring能做什么","children":[]},{"level":3,"title":"为什么用SpringBoot","slug":"为什么用springboot","link":"#为什么用springboot","children":[]}]},{"level":2,"title":"03、基础入门-SpringBoot的大时代背景","slug":"_03、基础入门-springboot的大时代背景","link":"#_03、基础入门-springboot的大时代背景","children":[{"level":3,"title":"微服务","slug":"微服务","link":"#微服务","children":[]},{"level":3,"title":"分布式","slug":"分布式","link":"#分布式","children":[]},{"level":3,"title":"云原生","slug":"云原生","link":"#云原生","children":[]}]},{"level":2,"title":"04、基础入门-SpringBoot官方文档架构","slug":"_04、基础入门-springboot官方文档架构","link":"#_04、基础入门-springboot官方文档架构","children":[{"level":3,"title":"官网文档架构","slug":"官网文档架构","link":"#官网文档架构","children":[]}]},{"level":2,"title":"05、基础入门-SpringBoot-HelloWorld","slug":"_05、基础入门-springboot-helloworld","link":"#_05、基础入门-springboot-helloworld","children":[{"level":3,"title":"系统要求","slug":"系统要求","link":"#系统要求","children":[]},{"level":3,"title":"HelloWorld项目","slug":"helloworld项目","link":"#helloworld项目","children":[]}]},{"level":2,"title":"06、基础入门-SpringBoot-依赖管理特性","slug":"_06、基础入门-springboot-依赖管理特性","link":"#_06、基础入门-springboot-依赖管理特性","children":[]},{"level":2,"title":"07、基础入门-SpringBoot-自动配置特性","slug":"_07、基础入门-springboot-自动配置特性","link":"#_07、基础入门-springboot-自动配置特性","children":[]},{"level":2,"title":"08、底层注解-@Configuration详解","slug":"_08、底层注解-configuration详解","link":"#_08、底层注解-configuration详解","children":[]},{"level":2,"title":"09、底层注解-@Import导入组件","slug":"_09、底层注解-import导入组件","link":"#_09、底层注解-import导入组件","children":[]},{"level":2,"title":"10、底层注解-@Conditional条件装配","slug":"_10、底层注解-conditional条件装配","link":"#_10、底层注解-conditional条件装配","children":[]},{"level":2,"title":"11、底层注解-@ImportResource导入Spring配置文件","slug":"_11、底层注解-importresource导入spring配置文件","link":"#_11、底层注解-importresource导入spring配置文件","children":[]},{"level":2,"title":"12、底层注解-@ConfigurationProperties配置绑定","slug":"_12、底层注解-configurationproperties配置绑定","link":"#_12、底层注解-configurationproperties配置绑定","children":[]},{"level":2,"title":"13、自动配置【源码分析】-自动包规则原理","slug":"_13、自动配置【源码分析】-自动包规则原理","link":"#_13、自动配置【源码分析】-自动包规则原理","children":[{"level":3,"title":"@SpringBootConfiguration","slug":"springbootconfiguration","link":"#springbootconfiguration","children":[]},{"level":3,"title":"@ComponentScan","slug":"componentscan","link":"#componentscan","children":[]},{"level":3,"title":"@EnableAutoConfiguration","slug":"enableautoconfiguration","link":"#enableautoconfiguration","children":[]}]},{"level":2,"title":"14、自动配置【源码分析】-初始加载自动配置类","slug":"_14、自动配置【源码分析】-初始加载自动配置类","link":"#_14、自动配置【源码分析】-初始加载自动配置类","children":[]},{"level":2,"title":"15、自动配置【源码分析】-自动配置流程","slug":"_15、自动配置【源码分析】-自动配置流程","link":"#_15、自动配置【源码分析】-自动配置流程","children":[]},{"level":2,"title":"16、最佳实践-SpringBoot应用如何编写","slug":"_16、最佳实践-springboot应用如何编写","link":"#_16、最佳实践-springboot应用如何编写","children":[]},{"level":2,"title":"17、最佳实践-Lombok简化开发","slug":"_17、最佳实践-lombok简化开发","link":"#_17、最佳实践-lombok简化开发","children":[]},{"level":2,"title":"18、最佳实践-dev-tools","slug":"_18、最佳实践-dev-tools","link":"#_18、最佳实践-dev-tools","children":[]},{"level":2,"title":"19、最佳实践-Spring Initailizr","slug":"_19、最佳实践-spring-initailizr","link":"#_19、最佳实践-spring-initailizr","children":[]},{"level":2,"title":"20、配置文件-yaml的用法","slug":"_20、配置文件-yaml的用法","link":"#_20、配置文件-yaml的用法","children":[{"level":3,"title":"基本语法","slug":"基本语法","link":"#基本语法","children":[]},{"level":3,"title":"数据类型","slug":"数据类型","link":"#数据类型","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]},{"level":2,"title":"21、配置文件-自定义类绑定的配置提示","slug":"_21、配置文件-自定义类绑定的配置提示","link":"#_21、配置文件-自定义类绑定的配置提示","children":[]},{"level":2,"title":"22、web场景-web开发简介","slug":"_22、web场景-web开发简介","link":"#_22、web场景-web开发简介","children":[]},{"level":2,"title":"23、web场景-静态资源规则与定制化","slug":"_23、web场景-静态资源规则与定制化","link":"#_23、web场景-静态资源规则与定制化","children":[{"level":3,"title":"静态资源目录","slug":"静态资源目录","link":"#静态资源目录","children":[]},{"level":3,"title":"静态资源访问前缀","slug":"静态资源访问前缀","link":"#静态资源访问前缀","children":[]},{"level":3,"title":"webjar","slug":"webjar","link":"#webjar","children":[]}]},{"level":2,"title":"24、web场景-welcome与favicon功能","slug":"_24、web场景-welcome与favicon功能","link":"#_24、web场景-welcome与favicon功能","children":[{"level":3,"title":"欢迎页支持","slug":"欢迎页支持","link":"#欢迎页支持","children":[]},{"level":3,"title":"自定义Favicon","slug":"自定义favicon","link":"#自定义favicon","children":[]}]},{"level":2,"title":"25、web场景-【源码分析】-静态资源原理","slug":"_25、web场景-【源码分析】-静态资源原理","link":"#_25、web场景-【源码分析】-静态资源原理","children":[{"level":3,"title":"配置类只有一个有参构造器","slug":"配置类只有一个有参构造器","link":"#配置类只有一个有参构造器","children":[]},{"level":3,"title":"资源处理的默认规则","slug":"资源处理的默认规则","link":"#资源处理的默认规则","children":[]},{"level":3,"title":"欢迎页的处理规则","slug":"欢迎页的处理规则","link":"#欢迎页的处理规则","children":[]}]},{"level":2,"title":"26、请求处理-【源码分析】-Rest映射及源码解析","slug":"_26、请求处理-【源码分析】-rest映射及源码解析","link":"#_26、请求处理-【源码分析】-rest映射及源码解析","children":[{"level":3,"title":"请求映射","slug":"请求映射","link":"#请求映射","children":[]}]},{"level":2,"title":"27、请求处理-【源码分析】-怎么改变默认的_method","slug":"_27、请求处理-【源码分析】-怎么改变默认的-method","link":"#_27、请求处理-【源码分析】-怎么改变默认的-method","children":[]},{"level":2,"title":"28、请求处理-【源码分析】-请求映射原理","slug":"_28、请求处理-【源码分析】-请求映射原理","link":"#_28、请求处理-【源码分析】-请求映射原理","children":[]},{"level":2,"title":"29、请求处理-常用参数注解使用","slug":"_29、请求处理-常用参数注解使用","link":"#_29、请求处理-常用参数注解使用","children":[]},{"level":2,"title":"30、请求处理-@RequestAttribute","slug":"_30、请求处理-requestattribute","link":"#_30、请求处理-requestattribute","children":[]},{"level":2,"title":"31、请求处理-@MatrixVariable与UrlPathHelper","slug":"_31、请求处理-matrixvariable与urlpathhelper","link":"#_31、请求处理-matrixvariable与urlpathhelper","children":[]},{"level":2,"title":"32、请求处理-【源码分析】-各种类型参数解析原理","slug":"_32、请求处理-【源码分析】-各种类型参数解析原理","link":"#_32、请求处理-【源码分析】-各种类型参数解析原理","children":[{"level":3,"title":"HandlerAdapter","slug":"handleradapter","link":"#handleradapter","children":[]},{"level":3,"title":"执行目标方法","slug":"执行目标方法","link":"#执行目标方法","children":[]},{"level":3,"title":"参数解析器","slug":"参数解析器","link":"#参数解析器","children":[]},{"level":3,"title":"返回值处理器","slug":"返回值处理器","link":"#返回值处理器","children":[]},{"level":3,"title":"回顾执行目标方法","slug":"回顾执行目标方法","link":"#回顾执行目标方法","children":[]},{"level":3,"title":"如何确定目标方法每一个参数的值","slug":"如何确定目标方法每一个参数的值","link":"#如何确定目标方法每一个参数的值","children":[]},{"level":3,"title":"小结","slug":"小结","link":"#小结","children":[]}]},{"level":2,"title":"33、请求处理-【源码分析】-Servlet API参数解析原理","slug":"_33、请求处理-【源码分析】-servlet-api参数解析原理","link":"#_33、请求处理-【源码分析】-servlet-api参数解析原理","children":[]},{"level":2,"title":"34、请求处理-【源码分析】-Model、Map原理","slug":"_34、请求处理-【源码分析】-model、map原理","link":"#_34、请求处理-【源码分析】-model、map原理","children":[]},{"level":2,"title":"35、请求处理-【源码分析】-自定义参数绑定原理","slug":"_35、请求处理-【源码分析】-自定义参数绑定原理","link":"#_35、请求处理-【源码分析】-自定义参数绑定原理","children":[]},{"level":2,"title":"36、请求处理-【源码分析】-自定义Converter原理","slug":"_36、请求处理-【源码分析】-自定义converter原理","link":"#_36、请求处理-【源码分析】-自定义converter原理","children":[]},{"level":2,"title":"37、响应处理-【源码分析】-ReturnValueHandler原理","slug":"_37、响应处理-【源码分析】-returnvaluehandler原理","link":"#_37、响应处理-【源码分析】-returnvaluehandler原理","children":[]},{"level":2,"title":"38、响应处理-【源码分析】-HTTPMessageConverter原理","slug":"_38、响应处理-【源码分析】-httpmessageconverter原理","link":"#_38、响应处理-【源码分析】-httpmessageconverter原理","children":[{"level":3,"title":"关于HttpMessageConverters的初始化","slug":"关于httpmessageconverters的初始化","link":"#关于httpmessageconverters的初始化","children":[]},{"level":3,"title":"ReturnValueHandler与MappingJackson2HttpMessageConverter关联","slug":"returnvaluehandler与mappingjackson2httpmessageconverter关联","link":"#returnvaluehandler与mappingjackson2httpmessageconverter关联","children":[]}]},{"level":2,"title":"39、响应处理-【源码分析】-内容协商原理","slug":"_39、响应处理-【源码分析】-内容协商原理","link":"#_39、响应处理-【源码分析】-内容协商原理","children":[]},{"level":2,"title":"40、响应处理-【源码分析】-基于请求参数的内容协商原理","slug":"_40、响应处理-【源码分析】-基于请求参数的内容协商原理","link":"#_40、响应处理-【源码分析】-基于请求参数的内容协商原理","children":[{"level":3,"title":"开启浏览器参数方式内容协商功能","slug":"开启浏览器参数方式内容协商功能","link":"#开启浏览器参数方式内容协商功能","children":[]}]},{"level":2,"title":"41、响应处理-【源码分析】-自定义MessageConverter","slug":"_41、响应处理-【源码分析】-自定义messageconverter","link":"#_41、响应处理-【源码分析】-自定义messageconverter","children":[]},{"level":2,"title":"42、响应处理-【源码分析】-浏览器与PostMan内容协商完全适配","slug":"_42、响应处理-【源码分析】-浏览器与postman内容协商完全适配","link":"#_42、响应处理-【源码分析】-浏览器与postman内容协商完全适配","children":[]},{"level":2,"title":"43、视图解析-Thymeleaf初体验","slug":"_43、视图解析-thymeleaf初体验","link":"#_43、视图解析-thymeleaf初体验","children":[{"level":3,"title":"thymeleaf使用","slug":"thymeleaf使用","link":"#thymeleaf使用","children":[]},{"level":3,"title":"基本语法","slug":"基本语法-1","link":"#基本语法-1","children":[]},{"level":3,"title":"设置属性值-th:attr","slug":"设置属性值-th-attr","link":"#设置属性值-th-attr","children":[]},{"level":3,"title":"迭代","slug":"迭代","link":"#迭代","children":[]},{"level":3,"title":"条件运算","slug":"条件运算-1","link":"#条件运算-1","children":[]},{"level":3,"title":"属性优先级","slug":"属性优先级","link":"#属性优先级","children":[]}]},{"level":2,"title":"44、web实验-后台管理系统基本功能","slug":"_44、web实验-后台管理系统基本功能","link":"#_44、web实验-后台管理系统基本功能","children":[{"level":3,"title":"项目创建","slug":"项目创建","link":"#项目创建","children":[]},{"level":3,"title":"登陆页面","slug":"登陆页面","link":"#登陆页面","children":[]},{"level":3,"title":"登录控制层","slug":"登录控制层","link":"#登录控制层","children":[]},{"level":3,"title":"模型","slug":"模型","link":"#模型","children":[]}]}],"git":{"createdTime":1699003101000,"updatedTime":1699003101000,"contributors":[{"name":"lh","email":"1178844902@qq.com","commits":1}]},"filePathRelative":"blogs/SpringBoot/SpringBoot原理/第一部分.md"}');export{l as data};
