import{_ as l,r as t,o,c as r,a,b as n,d as e,e as i}from"./app-55752f72.js";const p={},c=i(`<h2 id="数据卷" tabindex="-1"><a class="header-anchor" href="#数据卷" aria-hidden="true">#</a> 数据卷</h2><p><img src="https://note-img54.oss-cn-hongkong.aliyuncs.com/note/docker/docker.assets/image-20230912142027864.png" alt="image-20230912142027864"></p><h2 id="网络" tabindex="-1"><a class="header-anchor" href="#网络" aria-hidden="true">#</a> 网络</h2><p><img src="https://note-img54.oss-cn-hongkong.aliyuncs.com/note/docker/docker.assets/image-20230918174823197.png" alt="image-20230918174823197"></p><h2 id="nginx" tabindex="-1"><a class="header-anchor" href="#nginx" aria-hidden="true">#</a> Nginx</h2><p>https://www.bilibili.com/video/BV1Pa41177dm/?spm_id_from=333.880.my_history.page.click</p><p>拉取镜像</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>创建nginx容器</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> nginx <span class="token parameter variable">-p</span> <span class="token number">8880</span>:80 nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>创建挂载目录 mkdir -p /usr/local/nginx/{conf,log,html} 把Nginx容器中的文件进行复制 nginx.conf复制到主机 docker cp nginx:/etc/nginx/nginx.conf /usr/local/nginx/conf/nginx.conf 将conf.d文件夹复制到主机 docker cp nginx:/etc/nginx/conf.d /usr/local/nginx/conf/conf.d 把html目录复制到主机 docker cp nginx:/usr/share/nginx/html /usr/local/nginx/</p><p>停止刚刚创建的nginx容器 docker stop nginx 删除刚刚创建的容器 docker rm nginx 重新创建容器</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> nginx <span class="token parameter variable">-p</span> <span class="token number">80</span>:80 <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /usr/local/nginx/conf/nginx.conf:/etc/nginx/nginx.conf <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /usr/local/nginx/conf/conf.d:/etc/nginx/conf.d <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /usr/local/nginx/log:/var/log/nginx <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /usr/local/nginx/html:/usr/share/nginx/html <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /usr/local/mynote/dist:/usr/local/mynote/dist <span class="token punctuation">\\</span>
<span class="token parameter variable">--privileged</span><span class="token operator">=</span>true nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="redis" tabindex="-1"><a class="header-anchor" href="#redis" aria-hidden="true">#</a> redis</h2>`,14),d=a("code",null,"-p 6379:6379",-1),u={href:"https://cloud.tencent.com/product/cdh?from_column=20421&from=20421",target:"_blank",rel:"noopener noreferrer"},v=a("p",null,[a("code",null,"-v /data/redis/redis.conf:/etc/redis/redis.conf"),n("：把宿主机配置好的redis.conf放到容器内的这个位置中")],-1),m=a("code",null,"-v /data/redis/data:/data",-1),k={href:"https://cloud.tencent.com/solution/backup?from_column=20421&from=20421",target:"_blank",rel:"noopener noreferrer"},b=a("p",null,[a("code",null,"redis-server /etc/redis/redis.conf"),n("：这个是关键配置，让redis不是无配置启动，而是按照这个redis.conf的配置启动")],-1),h=a("p",null,[a("code",null,"–appendonly yes"),n("：redis启动后数据持久化")],-1),g=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-p</span> <span class="token number">6379</span>:6379 <span class="token parameter variable">--name</span> redis <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /usr/local/data/redis/redis.conf:/etc/redis/redis.conf  <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /usr/local/data/redis/data:/data <span class="token punctuation">\\</span>
<span class="token parameter variable">-d</span> redis redis-server /etc/redis/redis.conf <span class="token punctuation">\\</span>
<span class="token parameter variable">--appendonly</span> <span class="token function">yes</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="minio" tabindex="-1"><a class="header-anchor" href="#minio" aria-hidden="true">#</a> minio</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-p</span> <span class="token number">9000</span>:9000 <span class="token parameter variable">-p</span> <span class="token number">9090</span>:9090 <span class="token punctuation">\\</span>
     <span class="token parameter variable">--name</span> minio <span class="token punctuation">\\</span>
     <span class="token parameter variable">-d</span> <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token punctuation">\\</span>
     <span class="token parameter variable">-e</span> <span class="token string">&quot;MINIO_ACCESS_KEY=adminadmin&quot;</span> <span class="token punctuation">\\</span>
     <span class="token parameter variable">-e</span> <span class="token string">&quot;MINIO_SECRET_KEY=adminadmin&quot;</span> <span class="token punctuation">\\</span>
     <span class="token parameter variable">-v</span> /usr/local/minio/data:/data <span class="token punctuation">\\</span>
     <span class="token parameter variable">-v</span> /usr/local/minio/config:/root/.minio <span class="token punctuation">\\</span>
     minio/minio server <span class="token punctuation">\\</span>
     /data --console-address <span class="token string">&quot;:9090&quot;</span> <span class="token parameter variable">-address</span> <span class="token string">&quot;:9000&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql" aria-hidden="true">#</a> mysql</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/sh</span>
<span class="token function">docker</span> run <span class="token punctuation">\\</span>
<span class="token parameter variable">-p</span> <span class="token number">3306</span>:3306 <span class="token punctuation">\\</span>
<span class="token parameter variable">--name</span> mysql <span class="token punctuation">\\</span>
<span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token punctuation">\\</span>
<span class="token parameter variable">--restart</span> unless-stopped <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /usr/local/data/mysql8/mysql:/etc/mysql <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /usr/local/data/mysql8/logs:/logs <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /usr/local/data/mysql8/data:/var/lib/mysql <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /etc/localtime:/etc/localtime <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span>admin <span class="token punctuation">\\</span>
<span class="token parameter variable">-d</span> mysql:8.0.20
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="nacos" tabindex="-1"><a class="header-anchor" href="#nacos" aria-hidden="true">#</a> nacos</h2>`,6),f={href:"https://zhuanlan.zhihu.com/p/511823126",target:"_blank",rel:"noopener noreferrer"},_=i(`<p>启动nacos</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">PREFER_HOST_MODE</span><span class="token operator">=</span>ip <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">MODE</span><span class="token operator">=</span>standalone <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">SPRING_DATASOURCE_PLATFORM</span><span class="token operator">=</span>mysql <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_SERVICE_HOST</span><span class="token operator">=</span><span class="token number">172.18</span>.0.2 <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_SERVICE_PORT</span><span class="token operator">=</span><span class="token number">3306</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_SERVICE_DB_NAME</span><span class="token operator">=</span>nacos <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_SERVICE_USER</span><span class="token operator">=</span>root <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_SERVICE_PASSWORD</span><span class="token operator">=</span>admin <span class="token punctuation">\\</span>
<span class="token parameter variable">-p</span> <span class="token number">8848</span>:8848 <span class="token punctuation">\\</span>
<span class="token parameter variable">--network</span> <span class="token builtin class-name">test</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">--name</span> nacos <span class="token punctuation">\\</span>
<span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token punctuation">\\</span>
nacos/nacos-server:v2.2.0

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">###TEST-挂载启动-------------------------</span>
<span class="token function">docker</span> run <span class="token punctuation">\\</span>
<span class="token parameter variable">--name</span> nacos <span class="token parameter variable">-d</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">--network</span> <span class="token builtin class-name">test</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token punctuation">\\</span>
<span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token punctuation">\\</span>
<span class="token parameter variable">-p</span> <span class="token number">8848</span>:8848 <span class="token punctuation">\\</span>
<span class="token parameter variable">-p</span> <span class="token number">9848</span>:9848 <span class="token punctuation">\\</span>
<span class="token parameter variable">-p</span> <span class="token number">9849</span>:9849 <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">MODE</span><span class="token operator">=</span>standalone <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">PREFER_HOST_MODE</span><span class="token operator">=</span>hostname <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">JVM_XMS</span><span class="token operator">=</span>512m <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">JVM_XMX</span><span class="token operator">=</span>512m <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">JVM_XMN</span><span class="token operator">=</span>256m <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">JVM_MS</span><span class="token operator">=</span>64m <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">JVM_MMS</span><span class="token operator">=</span>128m <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /usr/local/nacos/logs:/home/nacos/logs <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /usr/local/nacos/data:/home/nacos/data <span class="token punctuation">\\</span>
nacos/nacos-server:v2.2.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker-compose" tabindex="-1"><a class="header-anchor" href="#docker-compose" aria-hidden="true">#</a> Docker-compose</h2>`,4),x={href:"https://yeasy.gitbook.io/docker_practice",target:"_blank",rel:"noopener noreferrer"},M=i('<p><img src="https://note-img54.oss-cn-hongkong.aliyuncs.com/note/docker/docker.assets/image-20230919103215435.png" alt="image-20230919103215435"></p><h3 id="模板命令" tabindex="-1"><a class="header-anchor" href="#模板命令" aria-hidden="true">#</a> 模板命令</h3><p><img src="https://note-img54.oss-cn-hongkong.aliyuncs.com/note/docker/docker.assets/image-20230818162005844.png" alt="image-20230818162005844"></p><p><img src="https://note-img54.oss-cn-hongkong.aliyuncs.com/note/docker/docker.assets/image-20230818162119551.png" alt="image-20230818162119551"></p><h3 id="命令" tabindex="-1"><a class="header-anchor" href="#命令" aria-hidden="true">#</a> 命令</h3>',5),y={href:"https://yeasy.gitbook.io/docker_practice/compose/commands",target:"_blank",rel:"noopener noreferrer"},S=i("<p>Docker 通过 <code>docker0</code> 网桥来实现容器之间的网络通信。当我们创建一个 Docker 容器时，Docker 会在主机上创建一个虚拟网卡 <code>veth</code>，同时将其一端连接到宿主机的 <code>docker0</code> 网桥上，另一端连接到容器内部。这样，容器就可以通过 <code>veth</code> 网卡和 <code>docker0</code> 网桥与其他容器或主机进行通信。</p><p>除了默认的 <code>docker0</code> 网桥外，我们也可以通过创建自定义的桥接网络来实现容器之间的通信。自定义的桥接网络可以提供更多的网络隔离和网络配置选项。当我们创建一个自定义的桥接网络时，Docker 会在主机上创建一个虚拟网卡 <code>veth</code>，同时将其一端连接到宿主机上新创建的桥接网络上，另一端连接到容器内部。这样，容器就可以通过 <code>veth</code> 网卡和自定义的桥接网络与其他容器或主机进行通信。</p><p>需要注意的是，自定义的桥接网络和 <code>docker0</code> 网桥是相互独立的，它们之间没有直接的关系。当我们使用自定义的桥接网络时，Docker 会自动将容器的网络流量路由到相应的网卡上，而不会经过 <code>docker0</code> 网桥。因此，在使用自定义的桥接网络时，我们需要确保网络配置正确，并且容器能够正确地访问其他容器和主机。</p><p>这段日志显示 MySQL 启动失败，并且包含了以下错误信息：</p><ul><li><code>[ERROR] [MY-012215] [InnoDB] Cannot open datafile &#39;./ibdata1&#39;</code>：无法打开数据文件。</li><li><code>[ERROR] [MY-012959] [InnoDB] Could not open or create the system tablespace</code>：无法打开或创建系统表空间。</li><li><code>[ERROR] [MY-012930] [InnoDB] Plugin initialization aborted with error Cannot open a file.</code>：插件初始化失败，无法打开文件。</li><li><code>[ERROR] [MY-010334] [Server] Failed to initialize DD Storage Engine</code>：无法初始化数据字典存储引擎。</li><li><code>[ERROR] [MY-010020] [Server] Data Dictionary initialization failed.</code>：数据字典初始化失败。</li><li><code>[ERROR] [MY-010119] [Server] Aborting</code>：MySQL 服务终止。</li></ul><p>同时，这段日志还包含了一些警告信息，例如：</p><ul><li><code>[Warning] [MY-013242] [Server] --character-set-server: &#39;utf8&#39; is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.</code>：警告使用了一个别名。</li><li><code>[Warning] [MY-013244] [Server] --collation-server: &#39;utf8_general_ci&#39; is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.</code>：警告使用了一个已经被弃用的字符集。</li></ul><p>根据这些错误和警告信息，可能存在以下原因：</p><ul><li>数据文件无法正常打开或访问。</li><li>数据字典初始化失败。</li><li>存储引擎插件初始化失败。</li><li>使用了一个别名或已经被弃用的字符集。</li></ul><p>解决这些问题需要针对具体情况进行分析和排查，可以尝试以下方法：</p><ul><li>检查 MySQL 的配置文件，确保数据文件路径正确，与实际情况相符合。</li><li>检查 MySQL 所在的目录和文件的权限，确保 MySQL 进程有足够的权限访问这些文件。</li><li>检查系统资源使用情况，例如内存和磁盘空间是否充足，是否存在其他进程占用了必要的资源。</li><li>检查 MySQL 的日志文件和错误日志，查找更详细的错误信息和警告信息，以便更好地定位问题。</li><li>尝试使用其他存储引擎或字符集，以确定是否存在存储引擎或字符集的问题。</li><li>尝试升级或降级 MySQL 版本，以确定是否存在版本兼容性的问题。</li></ul><p>word count: 531, token count: 1328, tokens used: 4911, model: gpt-3.5-turbo</p>",12);function E(R,q){const s=t("ExternalLinkIcon");return o(),r("div",null,[c,a("blockquote",null,[a("p",null,[d,n(":把容器内的6379端口映射到"),a("a",u,[n("宿主机"),e(s)]),n("6379端口")]),v,a("p",null,[m,n("：把redis持久化的数据在宿主机内显示，做"),a("a",k,[n("数据备份"),e(s)])]),b,h]),g,a("p",null,[a("a",f,[n("基于docker 安装nacos并配置mysql存储配置信息 - 知乎 (zhihu.com)"),e(s)])]),_,a("blockquote",null,[a("p",null,[a("a",x,[n("Docker中文文档"),e(s)])])]),M,a("p",null,[a("a",y,[n("命令说明 - Docker — 从入门到实践 (gitbook.io)"),e(s)])]),S])}const O=l(p,[["render",E],["__file","docker.html.vue"]]);export{O as default};
